//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Snoop.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<WINDOWPLACEMENT xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <length>44</length>
  <flags>0</flags>
  <showCmd>1</showCmd>
  <minPosition>
    <X>-1</X>
    <Y>-1</Y>
  </minPosition>
  <maxPosition>
    <X>-1</X>
    <Y>-1</Y>
  </maxPosition>
  <normalPosition>
    <Left>10</Left>
    <Top>10</Top>
    <Right>650</Right>
    <Bottom>490</Bottom>
  </normalPosition>
</WINDOWPLACEMENT>")]
        public Snoop.WINDOWPLACEMENT SnoopUIWindowPlacement {
            get {
                return ((Snoop.WINDOWPLACEMENT)(this["SnoopUIWindowPlacement"]));
            }
            set {
                this["SnoopUIWindowPlacement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<WINDOWPLACEMENT xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <length>44</length>
  <flags>0</flags>
  <showCmd>1</showCmd>
  <minPosition>
    <X>-1</X>
    <Y>-1</Y>
  </minPosition>
  <maxPosition>
    <X>-1</X>
    <Y>-1</Y>
  </maxPosition>
  <normalPosition>
    <Left>10</Left>
    <Top>10</Top>
    <Right>541</Right>
    <Bottom>36</Bottom>
  </normalPosition>
</WINDOWPLACEMENT>
")]
        public Snoop.WINDOWPLACEMENT AppChooserWindowPlacement {
            get {
                return ((Snoop.WINDOWPLACEMENT)(this["AppChooserWindowPlacement"]));
            }
            set {
                this["AppChooserWindowPlacement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<WINDOWPLACEMENT xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <length>44</length>
  <flags>0</flags>
  <showCmd>1</showCmd>
  <minPosition>
    <X>-1</X>
    <Y>-1</Y>
  </minPosition>
  <maxPosition>
    <X>-1</X>
    <Y>-1</Y>
  </maxPosition>
  <normalPosition>
    <Left>10</Left>
    <Top>10</Top>
    <Right>541</Right>
    <Bottom>36</Bottom>
  </normalPosition>
</WINDOWPLACEMENT>
")]
        public Snoop.WINDOWPLACEMENT ZoomerWindowPlacement {
            get {
                return ((Snoop.WINDOWPLACEMENT)(this["ZoomerWindowPlacement"]));
            }
            set {
                this["ZoomerWindowPlacement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfPropertyFilterSet xmlns:xsi=\"htt" +
            "p://www.w3.org/2001/XMLSchema-instance\"\r\n      xmlns:xsd=\"http://www.w3.org/2001" +
            "/XMLSchema\">\r\n      <PropertyFilterSet>\r\n        <DisplayName>Layout</DisplayNam" +
            "e>\r\n        <IsDefault>false</IsDefault>\r\n        <IsEditCommand>false</IsEditCo" +
            "mmand>\r\n        <Properties>\r\n          <string>width</string>\r\n          <strin" +
            "g>height</string>\r\n          <string>actualwidth</string>\r\n          <string>act" +
            "ualheight</string>\r\n          <string>margin</string>\r\n          <string>padding" +
            "</string>\r\n          <string>left</string>\r\n          <string>top</string>\r\n    " +
            "    </Properties>\r\n      </PropertyFilterSet>\r\n      <PropertyFilterSet>\r\n      " +
            "  <DisplayName>Grid/Dock</DisplayName>\r\n        <IsDefault>false</IsDefault>\r\n  " +
            "      <IsEditCommand>false</IsEditCommand>\r\n        <Properties>\r\n          <str" +
            "ing>grid</string>\r\n          <string>dock</string>\r\n        </Properties>\r\n     " +
            " </PropertyFilterSet>\r\n      <PropertyFilterSet>\r\n        <DisplayName>Color</Di" +
            "splayName>\r\n        <IsDefault>false</IsDefault>\r\n        <IsEditCommand>false</" +
            "IsEditCommand>\r\n        <Properties>\r\n          <string>color</string>\r\n        " +
            "  <string>background</string>\r\n          <string>foreground</string>\r\n          " +
            "<string>borderbrush</string>\r\n          <string>fill</string>\r\n          <string" +
            ">stroke</string>\r\n        </Properties>\r\n      </PropertyFilterSet>\r\n      <Prop" +
            "ertyFilterSet>\r\n        <DisplayName>ItemsControl</DisplayName>\r\n        <IsDefa" +
            "ult>false</IsDefault>\r\n        <IsEditCommand>false</IsEditCommand>\r\n        <Pr" +
            "operties>\r\n          <string>items</string>\r\n          <string>selected</string>" +
            "\r\n        </Properties>\r\n      </PropertyFilterSet>\r\n    </ArrayOfPropertyFilter" +
            "Set>\r\n")]
        public PropertyFilterSet[] PropertyFilterSets {
            get {
                return ((PropertyFilterSet[])(this["PropertyFilterSets"]));
            }
            set {
                this["PropertyFilterSets"] = value;
            }
        }
    }
}
