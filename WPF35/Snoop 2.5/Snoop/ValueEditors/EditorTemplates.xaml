<!--
(c) Copyright Microsoft Corporation.
This source is subject to the Microsoft Public License (Ms-PL).
Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
All other rights reserved.
-->
<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:my='clr-namespace:Snoop'>
	
	
	<Style TargetType='{x:Type my:StandardValueEditor}'>
		<Style.Resources>
			<DataTemplate x:Key='UnselectedValueTemplate'>
				<TextBlock Text='{Binding StringValue}'/>
			</DataTemplate>

			<DataTemplate x:Key='SelectedValueTemplate'>
				<my:EditTextBox Height='16' Text='{Binding StringValue}' HorizontalAlignment='Stretch' Padding='1' BorderThickness='0' Background='White' VerticalContentAlignment='Center'/>
			</DataTemplate>
		</Style.Resources>
		
		<Setter Property='Template'>
			<Setter.Value>
				<ControlTemplate TargetType='{x:Type my:StandardValueEditor}'>
					<ContentPresenter Name='ValueHolder' ContentTemplate='{StaticResource UnselectedValueTemplate}' Content='{Binding RelativeSource={RelativeSource TemplatedParent}}' ToolTip='{TemplateBinding StringValue}'/>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property='IsSelected' Value='True'/>
								<Condition Property='IsEditable' Value='True'/>
							</MultiTrigger.Conditions>
							<Setter TargetName='ValueHolder' Property='ContentTemplate' Value='{StaticResource SelectedValueTemplate}'/>
						</MultiTrigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType='{x:Type my:BoolValueEditor}'>
		<Setter Property='Template'>
			<Setter.Value>
				<ControlTemplate TargetType='{x:Type my:BoolValueEditor}'>
					<CheckBox IsChecked='{Binding Value, Mode=TwoWay}' IsEnabled='{TemplateBinding IsEditable}'/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType='{x:Type my:BrushValueEditor}'>
		<Style.Resources>
			<DataTemplate x:Key='UnselectedValueTemplate'>
				<Rectangle Width='50' Height='16' Fill='{Binding Value}' HorizontalAlignment='Left'/>
			</DataTemplate>

			<DataTemplate x:Key='SelectedValueTemplate'>
				<my:EditTextBox Height='16' Text='{Binding StringValue}' HorizontalAlignment='Stretch' Padding='1' BorderThickness='0' Background='White' VerticalContentAlignment='Center'/>
			</DataTemplate>
		
		</Style.Resources>
		
		<Setter Property='Template'>
			<Setter.Value>
				<ControlTemplate TargetType='{x:Type my:BrushValueEditor}'>
					<ContentPresenter Name='ValueHolder' ContentTemplate='{StaticResource UnselectedValueTemplate}' Content='{Binding RelativeSource={RelativeSource TemplatedParent}}'/>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property='IsSelected' Value='True'/>
								<Condition Property='IsEditable' Value='True'/>
							</MultiTrigger.Conditions>
							<Setter TargetName='ValueHolder' Property='ContentTemplate' Value='{StaticResource SelectedValueTemplate}'/>
						</MultiTrigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType='{x:Type my:EnumValueEditor}'>
		<Style.Resources>
			<DataTemplate x:Key='UnselectedValueTemplate'>
				<TextBlock Text='{Binding Value}'/>
			</DataTemplate>

			<DataTemplate x:Key='SelectedValueTemplate'>
				<ComboBox Height='16' Padding='2,-2,2,0' ItemsSource='{Binding Values}' IsSynchronizedWithCurrentItem='True'/>
			</DataTemplate>
		</Style.Resources>

		<Setter Property='Template'>
			<Setter.Value>
				<ControlTemplate TargetType='{x:Type my:EnumValueEditor}'>
					<ContentPresenter Name='ValueHolder' ContentTemplate='{StaticResource UnselectedValueTemplate}' Content='{Binding RelativeSource={RelativeSource TemplatedParent}}'/>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property='IsSelected' Value='True'/>
								<Condition Property='IsEditable' Value='True'/>
							</MultiTrigger.Conditions>
							<Setter TargetName='ValueHolder' Property='ContentTemplate' Value='{StaticResource SelectedValueTemplate}'/>
						</MultiTrigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
</ResourceDictionary>
